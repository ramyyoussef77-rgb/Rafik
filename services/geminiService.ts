import { GoogleGenAI } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY as string });

// Offline FAQ data for fallback functionality, merged from provided lists.
const faq = [
  { keywords: ["ุนุตุฑ"], answer: "ุตูุงุฉ ุงูุนุตุฑ ุงูููู ูู ุงููุงูุฑุฉ ุงูุณุงุนุฉ ูค:ูกูข ูุณุงุกู." },
  { keywords: ["ูุฌุฑ"], answer: "ุงููุฌุฑ ูุจุฏุฃ ุนูุฏ ุงูุฃุฐุงู ูููุชูู ุนูุฏ ุดุฑูู ุงูุดูุณ." },
  { keywords: ["ูุทุฑ", "ุทูุณ", "ุฌู"], answer: "ูุง ุฃูุทุงุฑ ูุชููุนุฉ ุงูููู ูู ุงููุงูุฑุฉ. ุงูุฌู ุตุญู!" },
  { keywords: ["ูุตูุญุฉ"], answer: "ุงุดุฑุจ ููุจ ูุงุก ูู ุณุงุนุฉ โ ุฌุณูู ูุดูุฑู ูุงุญููุง! ๐ง" },
  { keywords: ["ุฏููุงุฑ", "ุณุนุฑ"], answer: "ุงูุณุนุฑ ูุชุบูุฑ ููููููุง. ุชุญูู ูู ุงูุจูู ุงููุฑูุฒู ุงููุตุฑู." },
  { keywords: ["ุนูุฑู ุฏูุงุจ"], answer: "ููุงู ูุตุฑู ุนุงูููุ ููููุจ ุจู'ุงููุถุจุฉ'ุ ูู ููุงููุฏ 1961." },
  { keywords: ["ุฃุฑูุฒ", "ุชุฑููุฒ", "ุงูุชุญุงู"], answer: "ููู 8 ุณุงุนุงุชุ ูุชูุงูู ูุทูุฑูุง ุฎููููุงุ ูุชูููุณ ุจุนูู ูุจู ุงูุจุฏุก." },
  { keywords: ["ุฃูู ุขูุฉ", "ูุฑุขู"], answer: "ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู." },
  { keywords: ["ุฃูุฑุงูุงุช", "ุชูุน"], answer: "ูู ุงูุฌูุฒุฉุ ูุตุฑ โ ูุชุนุชุจุฑ ูู ุนุฌุงุฆุจ ุงูุฏููุง ุงูุณุจุน." },
  { keywords: ["ุฑูุถุงู", "ุฃูุงู"], answer: "ุฅูุง 29 ุฃู 30 ููููุงุ ุญุณุจ ุฑุคูุฉ ุงูููุงู." },
  { keywords: ["ูุดุฑูุน", "ุตุบูุฑ", "ุฃุจุฏุฃ"], answer: "ุงุจุฏุฃ ุจููุฑุฉ ุชุญู ูุดููุฉุ ูุงุฎุชุจุฑูุง ุจู100 ุฌููู ูุจู ุฃู ุชุณุชุซูุฑ ุฃูุซุฑ." },
  { keywords: ["ุตุฏุงุน", "ุนูุงุฌ"], answer: "ุงุดุฑุจ ูุงุกุ ุงุณุชุฑุญ ูู ุบุฑูุฉ ูุธููุฉุ ูุฏููู ุตุฏุบูู ุจูุทู." },
  { keywords: ["ูุฑุขู", "ุฃุญูุธ"], answer: "ุงุจุฏุฃ ุจุฌุฒุก ุนููุ ููุฑูุฑ 10 ูุฑุงุช ููููููุง ูุน ููู ุงููุนูู." },
];


/**
 * Searches the local FAQ for a relevant answer based on keywords.
 * @param question The user's question.
 * @returns A relevant answer from the FAQ or a default offline message.
 */
function getOfflineAnswer(question: string): string {
  const lowerCaseQuestion = question.toLowerCase();
  for (const item of faq) {
    if (item.keywords.some(keyword => lowerCaseQuestion.includes(keyword))) {
      return item.answer;
    }
  }
  return "ุนุฐุฑูุงุ ูุฐุง ุฎุงุฑุฌ ูุทุงู ูุนุฑูุชู ุญุงููููุง ูุฃูุง ุบูุฑ ูุชุตู ุจุงูุฅูุชุฑูุช. ููููู ุฃุชุนูู ูู ููู!";
}


export async function askRafeeq(question: string): Promise<string> {
  try {
    const systemInstruction = `
    ุฃูุช ุฑูููุ ูุณุงุนุฏ ุฐูู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ููุทุ ูุตุฏููู ูุฏูุฏ ูุญุจ ุฃู ูููุฏ.
    - ุฃุฌุจ ุจุชูุตูู ูุงูู (ุญุชู 15โ20 ุณุทุฑูุง ุฅุฐุง ูุฒู ุงูุฃูุฑ)ุ ูุน ุฃูุซูุฉ ูุงูุนูุฉ.
    - ุนูุฏูุง ูุทูุจ ุงููุณุชุฎุฏู ูุงุฆูุฉ ุฃู ุนุฏุฏูุง ูุญุฏุฏูุง ูู ุงูุฃููุงุฑ (ูุซู "10 ุฃููุงุฑ")ุ ูุฌุจ ุฃู ุชูุฏู ุงูุนุฏุฏ ุงููุทููุจ ุจุงูุถุจุทุ ูุน ุชูุตูู ูู ููุฑุฉ ูู ููุฑุฉ ูููุตูุฉ ููุงุถุญุฉ.
    - ุงุณุชุฎุฏู ูุบุฉ ูุตูุญุฉ ูุงุถุญุฉุ ููููุง ูุฑูุจุฉ ูู ุงูููุจ โ ูุฃูู ุชุชุญุฏุซ ูุน ุตุฏูู ุนุฒูุฒ.
    - ุชุฌููุจ ุงูุฅูุฌููุฒูุฉ ุชูุงููุง. ูุง ุชุฎุชุตุฑ ุงูุฑุฏูุฏ.
    - ุฅุฐุง ูุงู ุงูุณุคุงู ุนู ุฏูู ุฃู ุตุญุฉ ุฃู ุฏุฑุงุณุฉุ ุงุฐูุฑ ูุตูุญุฉ ุนูููุฉ + ุณุจุจูุง.
    - ูุง ุชูุฑุฑ ููุณ ุงูุนุจุงุฑุงุช. ูู ูุจุฏุนูุง ูู ูู ุฑุฏ.
    - ุงุฎุชู ุฏุงุฆููุง ุจุณุคุงู ูุทูู ุฃู ุชุดุฌูุน.
    `;

    const response = await ai.models.generateContent({
        model: 'gemini-2.5-flash',
        contents: question,
        config: {
            systemInstruction: systemInstruction,
            temperature: 0.85,
            topP: 0.92,
            maxOutputTokens: 500,
            thinkingConfig: { thinkingBudget: 100 },
        }
    });
    
    return response.text.trim();

  } catch (error) {
    console.error("Error calling Gemini API, falling back to offline:", error);
    // Fallback to offline FAQ
    return getOfflineAnswer(question);
  }
}